/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package reports;

import databaseConnections.Departments;
import databaseConnections.QueryExecution;
import static java.awt.Frame.MAXIMIZED_BOTH;
import javax.swing.JOptionPane;

/**
 *
 * @author ask
 */
public class PaymentReport extends javax.swing.JFrame {

    /**
     * Creates new form PaymentReport
     */
    
    QueryExecution paymentQuery;
    
    public PaymentReport() {
        initComponents();
        
        setExtendedState(MAXIMIZED_BOTH);
        paymentQuery = new QueryExecution();
        ReportBase.setTable(this, 30, 100, 1300, 550);
        
        Departments.setDepartments(deptCombo);
        fromDate.setEnabled(false);
        toDate.setEnabled(false);
        deptCombo.setEnabled(false);
        employeeID.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        group1 = new javax.swing.ButtonGroup();
        group2 = new javax.swing.ButtonGroup();
        thisMonth = new javax.swing.JRadioButton();
        fromTo = new javax.swing.JRadioButton();
        fromDate = new com.toedter.calendar.JDateChooser();
        toDate = new com.toedter.calendar.JDateChooser();
        allDepartments = new javax.swing.JRadioButton();
        selectDepartment = new javax.swing.JRadioButton();
        deptCombo = new javax.swing.JComboBox<>();
        employee = new javax.swing.JRadioButton();
        employeeID = new javax.swing.JTextField();
        show = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Payment Reeport");

        group1.add(thisMonth);
        thisMonth.setSelected(true);
        thisMonth.setText("This Month");

        group1.add(fromTo);
        fromTo.setText("From - To");
        fromTo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fromToItemStateChanged(evt);
            }
        });

        group2.add(allDepartments);
        allDepartments.setSelected(true);
        allDepartments.setText("All Departments");

        group2.add(selectDepartment);
        selectDepartment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selectDepartmentItemStateChanged(evt);
            }
        });

        group2.add(employee);
        employee.setText("EmployeeID");
        employee.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                employeeItemStateChanged(evt);
            }
        });

        show.setText("Show");
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(thisMonth)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fromTo)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(allDepartments)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectDepartment)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deptCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(employeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(employee)
                        .addGap(110, 110, 110)
                        .addComponent(show)))
                .addGap(67, 67, 67))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(thisMonth)
                            .addComponent(show)
                            .addComponent(fromTo)
                            .addComponent(allDepartments)
                            .addComponent(employee))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectDepartment)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(deptCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(employeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(222, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fromToItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fromToItemStateChanged

        if(fromTo.isSelected()) {
            fromDate.setEnabled(true);
            toDate.setEnabled(true);
        }else{
            fromDate.setDate(null);
            toDate.setDate(null);
            fromDate.setEnabled(false);
            toDate.setEnabled(false);
        }

    }//GEN-LAST:event_fromToItemStateChanged

    private void selectDepartmentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selectDepartmentItemStateChanged

        if(selectDepartment.isSelected()) {
            deptCombo.setEnabled(true);
        } else {
            deptCombo.setEnabled(false);
        }

    }//GEN-LAST:event_selectDepartmentItemStateChanged

    private void employeeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_employeeItemStateChanged

        if(employee.isSelected()) {
            employeeID.setEnabled(true);
        } else {
            employeeID.setText("");
            employeeID.setEnabled(false);
        }

    }//GEN-LAST:event_employeeItemStateChanged

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed

        if(thisMonth.isSelected() && allDepartments.isSelected()) {
            paymentQuery.setParameters("ReportPaymentThisMonth", null);
            paymentQuery.getReport(ReportBase.model);
        } else if(fromTo.isSelected() && allDepartments.isSelected()) {
            if( fromDate.getDate() == null){
                JOptionPane.showMessageDialog(this, "Select Valid From Date");
            }else if(toDate.getDate() == null) {
                JOptionPane.showMessageDialog(this, "Select Valid To Date");
            }else if( toDate.getDate().after(fromDate.getDate())) {
                paymentQuery.setParameters("ReportPaymentFromTo", fromDate,toDate);
                paymentQuery.getReport(ReportBase.model);
            } else {
                JOptionPane.showMessageDialog(this, "Check From And To Dates");
            }
        } else if(thisMonth.isSelected() && selectDepartment.isSelected()) {
            paymentQuery.setParameters("ReportPaymentThisMonthThisDepartment", deptCombo);
            paymentQuery.getReport(ReportBase.model);
        } else if(fromTo.isSelected() && selectDepartment.isSelected()) {

            if( fromDate.getDate() == null){
                JOptionPane.showMessageDialog(this, "Select Valid From Date");
            }else if(toDate.getDate() == null) {
                JOptionPane.showMessageDialog(this, "Select Valid To Date");
            }else if( toDate.getDate().after(fromDate.getDate())) {
                paymentQuery.setParameters("ReportPaymentFromToThisDepartment", fromDate,toDate,deptCombo);
                paymentQuery.getReport(ReportBase.model);
            } else {
                JOptionPane.showMessageDialog(this, "Check From And To Dates");
            }
        } else if(thisMonth.isSelected() && employee.isSelected()) {
            paymentQuery.setParameters("ReportPaymentThisMonthThisEmployee", employeeID);
            paymentQuery.getReport(ReportBase.model);
            int returnedValue = paymentQuery.getReturnedValue();
            if(returnedValue == 0){
                JOptionPane.showMessageDialog(this, "Wrong EmployeeID");
            }
        } else if(fromTo.isSelected() && employee.isSelected()) {
            if( fromDate.getDate() == null){
                JOptionPane.showMessageDialog(this, "Select Valid From Date");
            }else if(toDate.getDate() == null) {
                JOptionPane.showMessageDialog(this, "Select Valid To Date");
            }else if( toDate.getDate().after(fromDate.getDate())) {
                paymentQuery.setParameters("ReportPaymentFromToThisEmployee", fromDate,toDate,employeeID);
                paymentQuery.getReport(ReportBase.model);
                int returnedValue = paymentQuery.getReturnedValue();
                if(returnedValue == 0){
                    JOptionPane.showMessageDialog(this, "Wrong EmployeeID");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Check From And To Dates");
            }
        }

    }//GEN-LAST:event_showActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaymentReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaymentReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaymentReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaymentReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaymentReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton allDepartments;
    private javax.swing.JComboBox<String> deptCombo;
    private javax.swing.JRadioButton employee;
    private javax.swing.JTextField employeeID;
    private com.toedter.calendar.JDateChooser fromDate;
    private javax.swing.JRadioButton fromTo;
    private javax.swing.ButtonGroup group1;
    private javax.swing.ButtonGroup group2;
    private javax.swing.JRadioButton selectDepartment;
    private javax.swing.JButton show;
    private javax.swing.JRadioButton thisMonth;
    private com.toedter.calendar.JDateChooser toDate;
    // End of variables declaration//GEN-END:variables
}
